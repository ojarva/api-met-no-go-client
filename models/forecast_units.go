// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ForecastUnits forecast units
//
// swagger:model ForecastUnits
type ForecastUnits struct {

	// air pressure at sea level
	// Example: hPa
	AirPressureAtSeaLevel string `json:"air_pressure_at_sea_level,omitempty"`

	// air temperature
	// Example: C
	AirTemperature string `json:"air_temperature,omitempty"`

	// air temperature max
	// Example: C
	AirTemperatureMax string `json:"air_temperature_max,omitempty"`

	// air temperature min
	// Example: C
	AirTemperatureMin string `json:"air_temperature_min,omitempty"`

	// cloud area fraction
	// Example: %
	CloudAreaFraction string `json:"cloud_area_fraction,omitempty"`

	// cloud area fraction high
	// Example: %
	CloudAreaFractionHigh string `json:"cloud_area_fraction_high,omitempty"`

	// cloud area fraction low
	// Example: %
	CloudAreaFractionLow string `json:"cloud_area_fraction_low,omitempty"`

	// cloud area fraction medium
	// Example: %
	CloudAreaFractionMedium string `json:"cloud_area_fraction_medium,omitempty"`

	// dew point temperature
	// Example: C
	DewPointTemperature string `json:"dew_point_temperature,omitempty"`

	// fog area fraction
	// Example: %
	FogAreaFraction string `json:"fog_area_fraction,omitempty"`

	// precipitation amount
	// Example: mm
	PrecipitationAmount string `json:"precipitation_amount,omitempty"`

	// precipitation amount max
	// Example: mm
	PrecipitationAmountMax string `json:"precipitation_amount_max,omitempty"`

	// precipitation amount min
	// Example: mm
	PrecipitationAmountMin string `json:"precipitation_amount_min,omitempty"`

	// probability of precipitation
	// Example: %
	ProbabilityOfPrecipitation string `json:"probability_of_precipitation,omitempty"`

	// probability of thunder
	// Example: %
	ProbabilityOfThunder string `json:"probability_of_thunder,omitempty"`

	// relative humidity
	// Example: %
	RelativeHumidity string `json:"relative_humidity,omitempty"`

	// ultraviolet index clear sky max
	// Example: 1
	UltravioletIndexClearSkyMax string `json:"ultraviolet_index_clear_sky_max,omitempty"`

	// wind from direction
	// Example: degrees
	WindFromDirection string `json:"wind_from_direction,omitempty"`

	// wind speed
	// Example: m/s
	WindSpeed string `json:"wind_speed,omitempty"`

	// wind speed of gust
	// Example: m/s
	WindSpeedOfGust string `json:"wind_speed_of_gust,omitempty"`
}

// Validate validates this forecast units
func (m *ForecastUnits) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this forecast units based on context it is used
func (m *ForecastUnits) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ForecastUnits) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ForecastUnits) UnmarshalBinary(b []byte) error {
	var res ForecastUnits
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
